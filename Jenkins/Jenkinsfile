pipeline {
    agent any

    environment {
        IMAGE_NAME = 'momer99/mlops-a1'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    try {
                        bat "docker build -t %IMAGE_NAME%:%DOCKER_TAG% ."
                    } catch (Exception e) {
                        error "Docker build failed: ${e.message}"
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                        try {
                            bat "docker push %IMAGE_NAME%:%DOCKER_TAG%"
                            bat "docker tag %IMAGE_NAME%:%DOCKER_TAG% %IMAGE_NAME%:latest"
                            bat "docker push %IMAGE_NAME%:latest"
                        } catch (Exception e) {
                            error "Docker push failed: ${e.message}"
                        }
                    }
                }
            }
        }
    }
    
    post {
        success {
            emailext (
                subject: "Deployment Successful",
                body: "The latest version ($DOCKER_TAG) has been successfully deployed.",
                recipientProviders: [developers()]
            )
        }
        failure {
            emailext (
                subject: "Deployment Failed",
                body: "The deployment of version ($DOCKER_TAG) failed. Check Jenkins logs for details.",
                recipientProviders: [developers()]
            )
        }
    }
}
